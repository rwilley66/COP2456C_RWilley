<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HcMoKcr/AV0yPkKZ6HqHAAAAAElFTkSuQmCC
</value>
  </data>
</root>